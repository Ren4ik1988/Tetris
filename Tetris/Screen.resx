<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAPoAAAH0CAMAAAAjT8DLAAAABGdBTUEAALGPC/xhBQAAAwBQTFRFGSj/
        FUL/NUL/DJP/A+T/AP//D///H///IP//L///Pv//QP//T///X///YP//b///fv//m///n///v///2///
        3///////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmhbIAAAAAlwSFlzAAAE
        nQAABJ0BfDRroQAAABl0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC4xNzNun2MAAAzxSURBVHhe7Z2B
        bhtJDgVz551bbxw7Wnmt///U6xmPAUnNMu513imk1QUQEYZx06Uhdxbdkf1t8us8LA/7qzqcIg7LYX91
        hZzALzDWGEiwek5QRKeauhFW97UW3ym9BqIvVU3dmGD1nKCITjV1I6zuay2+U3oNRF+qmroxweo5QRGd
        aupGWN3XWnyn9BqIvlQ1dWOC1XOCIjrV1I2wuq+1+E7pNRB9qWrqxgSr5wRFdKqpG2F1X2vxndJrIPpS
        q/m/Tqe319Pp9TIOy/PpdDz28aOtdWzLHa7j+3Loru3Xo3VaHJYf7c++9um51fh4/fZ2Fj+XQ/C9tmjf
        7vW18xpndT++r1V9OZ2WMrEc4ut6rOp/nE6PT6fTUxAvLxDnd/V/iHCNjwjqnsfj41UEfyeMqFaLj+9p
        VZ/P9Sv0tSiBX2CsMZBg9ZygiE41dSOs7mstvlN6DURfqpq6McHqOUERnWrqRljd11p/L+1/JEL0Goi+
        1C3Uj0Z1Y4LVc4IiOtXUjbC6r7WcDY/oS1VTNyZYPScoolNN3Qir+1prznqAr8ZAgtVzgiI61dSNsLqv
        teasB/hqDCRYPScoorOaP7QV24L3Fqt6cDLR4pNTjkNwbQ06GVle4usjNSjaUuF1rsF3/bB8D6+fvrdv
        K7qOZ24/lpfwurPGoS0VXucaq/p8rt8brO57jMzneoCvxkCC1XOCIjrV1I2wuq+15qwH+GoMJFg9Jyii
        U03dCKv7WmvOeoCvxkCC1XOCIjrV1I2wuq+15qwH+GoMJFg9JyiiU03dCKv7WmvOeoCvxkCC1XOCIjrV
        1I2s5pU2ozHGNqOD7fkWSY8gqEa7HF7nGnzXcwYeQeixqs/n+hW+x8h8rgf4agwkWD0nKKJTTd0Iq/ta
        a856gK/GQILVc4IiOtXUjbC6r7XmrAf4agwkWD0nKKJTTd0Iq/taa856gK/GQILVc4IiOtXUjbC6r7Xm
        rAf4agwkWD0nKKJTTd0Iq/ta63V52l9do9dA9KU29Zbrd2v1PX06N3hu6tF1Z42Bfyi/qQf783lD/XgE
        xqYevytfPTb1vfkv0YeHEplnfX99ib4WJZzqxgSr5wRFdKqpG2F1X2vNWQ/w1RhIsHpOUESnmroRVve1
        1pz1AF+NgQSr5wRFdKqpG2F1X2vNWQ/w1RhIsHpOUESnmroRVve11pz1AF+NgQSr5wRFdKqpG2F1X2vN
        WQ/w1RhIbOotF2zWpgz94xEY39bfJRxv0X/1+LbQXc958IQxcPC03vW9+S/xTdV8rltAEZ1q6kZY3dda
        87ke4KsxkGD1nKCITjV1I6zua6056wG+GgMJVs8JiuhUUzfC6r7WmrMe4KsxkGD1nKCITjV1I6zua605
        6wG+GgMJVs8JiuhUUzfC6r7WmrMe4KsxkGD1nKCIzqbeVgs2a796bOrhFr3+k434EwpPwbU1RmpQyD+h
        aVMP35WcRxB48DRwBLGyN38F3LO+v74zWN33GJnP9QBfjYEEq+cERXSqqRthdV9r/bM87q+u0Wsg+lK3
        UH8zqhsTrJ4TFNGppm6E1X2t5Wx4RF+qmroxweo5QRGdaupGWN3XWnPWA3w1BhKsnhMU0ammboTVfa01
        Zz3AV2Mgweo5QRGdaupGNvX2Rvabtb6N4p+t4aPrIzUwBjejwy36keMBOoJ4DK6t4axhPILIGXgEocem
        vjf/ncHqvsfIfK4H+GoMJFg9JyiiU03dCKv7WmvOeoCvxkCC1XOCIjrV1I2wuq+15qwH+GoMJFg9Jyii
        U03dCKv7WmvOeoCvxkCC1XOCIjrV1I2wuq+15qwH+GoMJFg9JyiiU03dCKv7WivxrP+/fx31z+UxvO6s
        MXCasarHO/RJg04a9OC7/uVjVZ/P9Sv0tSgxn+sWUESnmroRVve11pz1AF+NgQSr5wRFdKqpG2F1X2vN
        WQ/w1RhIsHpOUESnmroRVve11pz1AF+NgQSr5wRFdKqpG2F1X2vNWQ/w1RhIsHpOUESnmroRVje21rr/
        GaIvhehLVVM3Jt7VW/J8m/Z4/DxeXz+Jt/bftU/iF0ERnXf1s4353x2P7WlA8fT0eby8fBJXt/dweFe/
        urz91b+WQ/flWxyWP4OyLVqi/Rl8y+dKl6rypzY+CfWTIe/qEcapWkuFBF/xPhiH5efVoKzRBuqwPF8N
        2B7PbaloOI8/lsP2Z6t0fns/7nod7LN+l7D6b2r4d/Sbqy9VTd2YYPWcoIhONXUjrG5srTnrPcYaeoLV
        c4IiOtXUjbC6sbXmrPcYa+gJVs8JiuhUUzfC6sbWmrPeY6yhJ1g9JyiiU03dCKsbW2vOeo+xhp5g9Zyg
        iM6m3la73Ky8i9jUWz+uPXkZuBX+yccQcCs8uLbGSA0KeUt/Uw/fFf3DJPiBlVYnvO6soX8oZlPfm78C
        7lnfX98ZrG58jKzDFaIvhehLVVM3Jlg9JyiiU03dCKsbW2vOeo+xhp5g9ZygiE41dSOsbmytOes9xhp6
        gtVzgiI61dSNsLqxteas9xhr6AlWzwmK6FRTN8Lqxtaas95jrKEnWD0nKKJTTd3Irt7eyuvtWuO277pB
        H10fqIGhb18/vKu3YVwH8jJsv3WBrrew1YC/vwbVwLueM7Cz9Njv+j2ymsfqxsfI2l8h+lKIvlQ1dWOC
        1XOCIjrV1I2wurG1Hpe3/dUV+lKIvlQ1dWOC1XOCIjrV1I2wurG15qz3GGvoCVbPCYroVFM3wurG1pqz
        3mOsoSdYPScoolNN3QirG1trznqPsYaeYPWcoIhONXUjrG5srTnrPcYaeoLVc4IiOtXUjbC6sbXmrPcY
        a+iJTb3lwlOphIHnpnps6hfnj3cTm3r4ruCZpn6S/Z/lLbw+UAMDT+Sxxqa+N/8lxqmaz3UHKKJTTd0I
        qxtbaz7Xe4w19ASr5wRFdKqpG2F1Y2vNWe8x1tATrJ4TFNGppm6E1Y2tNWe9x1hDT7B6TlBEp5q6EVY3
        ttac9R5jDT3B6jlBEZ1q6kZY3dhac9Z7jDX0BKvnBEV0NvW2WrBZ+9VjUw+36J0fq1re4usjNSjkj4dt
        6uG7kvMIAms4jyBy4p71/fWdwerGx8h8rvcYa+gJVs8JiuhUUzfC6sbWmrPeY6yhJ1g9JyiiU03dCKsb
        W+uOZ/378rq/usJYQ0+wek5QRKeauhFWN7bWk6/hEX2paurGBKvnBEV0VvOHtmJb8N5iVY+3rka24OBr
        nga24KgGBW7BYQ2+68btsaflObzurKFv863q87l+b7C68TEyn+s9xhp6gtVzgiI61dSNsLqxteas9xhr
        6AlWzwmK6FRTN8Lqxtaas95jrKEnWD0nKKJTTd0Iqxtba856j7GGnmD1nKCITjV1I6xubK056z3GGnqC
        1XOCIjrV1I1s6u2N7Hdr9d1d3EH+c3kNrw/UwNB3qTf1YH9+ZE//k7OJ1/i6tQZ8DdbY1ON3JWVgZ+mx
        qe/Nf2ewuvExMp/rPcYaeoLVc4IiOtXUjbC6sbXmrPcYa+gJVs8JiuhUUzfC6sbWmrPeY6yhJ1g9Jyii
        U03dCKsbW2vOeo+xhp5g9ZygiE41dSOsbmytOes9xhp6gtVzgiI61dSNsLqxtRLPesv1m7U5jyCwhvMI
        ImuoH4/A2NTjd+Wrx6a+N/8l+vBgYj7Xe4w19ASr5wRFdKqpG2F1Y2u9LMf91RX6Uoi+VDV1Y4LVc4Ii
        OtXUjbC6sbXmrPcYa+gJVs8JiuhUUzfC6sbWmrPeY6yhJ1g9JyiiU03dCKsbW2vOeo+xhp5g9ZygiE41
        dSOsbmytOes9xhp6YlNvuWCzNmW4/z18vEX/1WNTD98V46HQX8sxvD5QA2Pw4Glv/kuMUzWf6w5QRKea
        uhFWN7bWfK73GGvoCVbPCYroVFM3wurG1pqz3mOsoSdYPScoolNN3QirG1trznqPsYaeYPWcoIhONXUj
        rG5srTnrPcYaeoLVc4IiOtXUjbC6sbXmrPcYa+gJVs8Jiuhs6m21YLP268b7RvemHm7RW39I0jG+PlKD
        wviDmHIeQWAN5Qji7K7vzV8B96zvr+8MVjc+RuZzvcdYQ0+wek5QRKeauhFWN7bWnPUeYw09weo5QRGd
        aupGWN3YWnPWe4w19ASr5wRFdKqpG2F1Y2vd8aznTLB6TlBEp5q6EVa/Rc/pCURfqpq6McHqOUERnWrq
        Rjb19kZebNZu8Zs2it8Da2DoNTb1cIt+5HjA9nsablFjU4/flZSBnaXHpr43/53B6rd4vugJRF+qmrox
        weo5QRGdaupGWP0WPacnEH2paurGBKvnBEV0qqkbYfVb9JyeQPSlqqkbE6yeExTRqaZuhNVv0XN6AtGX
        qqZuTLB6TlBEp5q6EVa/Rc/pCURfqpq6McHqOUERnWrqRlhdf3+NzXgLNvWQh+Vhf/XL4FJ6DeN3dcd8
        +/d/AYUW+Jy3lBeZAAAAAElFTkSuQmCC
</value>
  </data>
</root>